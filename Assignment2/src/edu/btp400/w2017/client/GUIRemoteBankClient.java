/**
 *A GUI for RemoteBankClient
 *
 * @author Mustafa Khoraidah
 * @version 0.2
 */
package edu.btp400.w2017.client;
import static edu.btp400.w2017.client.RemoteBankClient.*;
import java.util.*;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.RemoteException;
import java.text.NumberFormat;
import edu.btp400.w2017.common.*;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;


public class GUIRemoteBankClient extends javax.swing.JFrame {
    public enum TransactionType{
		WITHDRAW, DEPOSIT
	}

    private static final double SMALLEST_DOUBLE_VALUE = -1 * Double.MAX_VALUE;
    private static final double LARGEST_DOUBLE_VALUE = Double.MAX_VALUE;
    private static NumberFormat currencyFormat = NumberFormat.getCurrencyInstance(Locale.CANADA);
        
    private int choice = 0;
    private Account account = null;
    private double amount;
    private RemoteBank serverBank = null;
    
    /**
	 * Prompts the user to enter a type of account to create and takes the parameters
	 * necessary to open an account.
	 *
	 * @param bank			The bank to add accounts to
	 * @throws RemoteException
	 */
    
    /**
     * Creates new form Test
     */
    public GUIRemoteBankClient() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupAccountType = new javax.swing.ButtonGroup();
        buttonGroupDisplay = new javax.swing.ButtonGroup();
        jButLoadData = new javax.swing.JButton();
        jLabLoadData = new javax.swing.JLabel();
        jLabBankName = new javax.swing.JLabel();
        jTabbedPaneMenu = new javax.swing.JTabbedPane();
        jPanelOpenAccount = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jRadioSAV = new javax.swing.JRadioButton();
        jRadioCHQ = new javax.swing.JRadioButton();
        jRadioGIC = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jTextName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextAccountNum = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextBalance = new javax.swing.JTextField();
        jLabRS = new javax.swing.JLabel();
        jTextRateSCharge = new javax.swing.JTextField();
        jLabMaxOrPeriod = new javax.swing.JLabel();
        jButOpenAccount = new javax.swing.JButton();
        jTextMaxOrPeriod = new javax.swing.JTextField();
        jPanelDelete = new javax.swing.JPanel();
        jButDeleteAccount = new javax.swing.JButton();
        jLabDeleteAccount = new javax.swing.JLabel();
        jTextDeleteAccount = new javax.swing.JTextField();
        jPanelDeposit = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanelWithdraw = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanelDisplay = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jButDisplay = new javax.swing.JButton();
        jRadioName = new javax.swing.JRadioButton();
        jRadioBalance = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jTextNameOrBalance = new javax.swing.JTextField();
        jPanelTaxStatement = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jButTaxStat = new javax.swing.JButton();
        jTextAccountHolder = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButLoadData.setText("Start");
        jButLoadData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButLoadDataActionPerformed(evt);
            }
        });

        jLabLoadData.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabLoadData.setText("Connect to the server:");

        jLabBankName.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabBankName.setForeground(new java.awt.Color(204, 0, 0));
        jLabBankName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabBankName.setText("Welcome to *** Bank");
        jLabBankName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Open Account:");

        jRadioSAV.setSelected(true);
        jRadioSAV.setText("SAV");
        jRadioSAV.setEnabled(false);
        jRadioSAV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioSAVActionPerformed(evt);
            }
        });

        jRadioCHQ.setText("CHQ");
        jRadioCHQ.setEnabled(false);
        jRadioCHQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioCHQActionPerformed(evt);
            }
        });

        jRadioGIC.setText("GIC");
        jRadioGIC.setEnabled(false);
        jRadioGIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioGICActionPerformed(evt);
            }
        });

        jLabel4.setText("Name:");

        jTextName.setText("Ex. Last name, First name");
        jTextName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextNameFocusGained(evt);
            }
        });

        jLabel5.setText("Account Number:");

        jLabel6.setText("Balance:");

        jLabRS.setText("Interest Rate:");

        jLabMaxOrPeriod.setText("Number of Transactions Allowed:");

        jButOpenAccount.setText("Open");
        jButOpenAccount.setEnabled(false);
        jButOpenAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButOpenAccountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelOpenAccountLayout = new javax.swing.GroupLayout(jPanelOpenAccount);
        jPanelOpenAccount.setLayout(jPanelOpenAccountLayout);
        jPanelOpenAccountLayout.setHorizontalGroup(
            jPanelOpenAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOpenAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOpenAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButOpenAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelOpenAccountLayout.createSequentialGroup()
                        .addGroup(jPanelOpenAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelOpenAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelOpenAccountLayout.createSequentialGroup()
                                .addComponent(jTextName)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextAccountNum))
                            .addGroup(jPanelOpenAccountLayout.createSequentialGroup()
                                .addComponent(jTextBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabRS)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextRateSCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabMaxOrPeriod)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextMaxOrPeriod, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelOpenAccountLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioSAV)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioCHQ)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioGIC)))
                .addContainerGap())
        );
        jPanelOpenAccountLayout.setVerticalGroup(
            jPanelOpenAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOpenAccountLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanelOpenAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jRadioSAV)
                    .addComponent(jRadioCHQ)
                    .addComponent(jRadioGIC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOpenAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextAccountNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOpenAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabRS)
                    .addComponent(jTextRateSCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabMaxOrPeriod)
                    .addComponent(jTextMaxOrPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButOpenAccount))
        );

        jTextName.getAccessibleContext().setAccessibleName("");

        jTabbedPaneMenu.addTab("Open Account", jPanelOpenAccount);

        jButDeleteAccount.setText("Delete Account");
        jButDeleteAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButDeleteAccountActionPerformed(evt);
            }
        });

        jLabDeleteAccount.setText("Account Number:");

        javax.swing.GroupLayout jPanelDeleteLayout = new javax.swing.GroupLayout(jPanelDelete);
        jPanelDelete.setLayout(jPanelDeleteLayout);
        jPanelDeleteLayout.setHorizontalGroup(
            jPanelDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDeleteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabDeleteAccount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextDeleteAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButDeleteAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(176, Short.MAX_VALUE))
        );
        jPanelDeleteLayout.setVerticalGroup(
            jPanelDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDeleteLayout.createSequentialGroup()
                .addGroup(jPanelDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextDeleteAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabDeleteAccount)
                    .addComponent(jButDeleteAccount))
                .addContainerGap(96, Short.MAX_VALUE))
        );

        jTabbedPaneMenu.addTab("Close Account", jPanelDelete);

        jLabel2.setText("Deposit money function is currently disabled.");

        javax.swing.GroupLayout jPanelDepositLayout = new javax.swing.GroupLayout(jPanelDeposit);
        jPanelDeposit.setLayout(jPanelDepositLayout);
        jPanelDepositLayout.setHorizontalGroup(
            jPanelDepositLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDepositLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelDepositLayout.setVerticalGroup(
            jPanelDepositLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDepositLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        jTabbedPaneMenu.addTab("Deposit", jPanelDeposit);

        jLabel3.setText("Withdraw function is currently disabled.");

        javax.swing.GroupLayout jPanelWithdrawLayout = new javax.swing.GroupLayout(jPanelWithdraw);
        jPanelWithdraw.setLayout(jPanelWithdrawLayout);
        jPanelWithdrawLayout.setHorizontalGroup(
            jPanelWithdrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWithdrawLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(382, Short.MAX_VALUE))
        );
        jPanelWithdrawLayout.setVerticalGroup(
            jPanelWithdrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWithdrawLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        jTabbedPaneMenu.addTab("Withdraw", jPanelWithdraw);

        jLabel7.setText("Display all accounts by:");

        jButDisplay.setText("Display");
        jButDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButDisplayActionPerformed(evt);
            }
        });

        jRadioName.setSelected(true);
        jRadioName.setText("Name");

        jRadioBalance.setText("Balance");

        jLabel10.setText("Enter:");

        javax.swing.GroupLayout jPanelDisplayLayout = new javax.swing.GroupLayout(jPanelDisplay);
        jPanelDisplay.setLayout(jPanelDisplayLayout);
        jPanelDisplayLayout.setHorizontalGroup(
            jPanelDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelDisplayLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioBalance))
                    .addGroup(jPanelDisplayLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextNameOrBalance)))
                .addGap(18, 18, 18)
                .addComponent(jButDisplay)
                .addContainerGap(215, Short.MAX_VALUE))
        );
        jPanelDisplayLayout.setVerticalGroup(
            jPanelDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jRadioName)
                    .addComponent(jRadioBalance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextNameOrBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButDisplay))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jTabbedPaneMenu.addTab("Display Accounts", jPanelDisplay);

        jLabel8.setText("Please provide account holder name: ");

        jButTaxStat.setText("Display");
        jButTaxStat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButTaxStatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTaxStatementLayout = new javax.swing.GroupLayout(jPanelTaxStatement);
        jPanelTaxStatement.setLayout(jPanelTaxStatementLayout);
        jPanelTaxStatementLayout.setHorizontalGroup(
            jPanelTaxStatementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTaxStatementLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextAccountHolder, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButTaxStat)
                .addGap(88, 88, 88))
        );
        jPanelTaxStatementLayout.setVerticalGroup(
            jPanelTaxStatementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTaxStatementLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanelTaxStatementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jButTaxStat)
                    .addComponent(jTextAccountHolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        
        jTextAccountHolder.setText("Last name, First name");

        jTabbedPaneMenu.addTab("Tax Statement", jPanelTaxStatement);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabBankName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabLoadData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButLoadData, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTabbedPaneMenu, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButLoadData)
                    .addComponent(jLabLoadData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabBankName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPaneMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButLoadDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButLoadDataActionPerformed
      try{
			serverBank = (RemoteBank) Naming.lookup("rmi://localhost:5678/bank");
		}catch (RemoteException e){
                    JOptionPane.showMessageDialog(null, "No connection to server.\nPlease ensure server is still active.", "Server Error", JOptionPane.ERROR_MESSAGE);
		}catch (MalformedURLException e){
                    JOptionPane.showMessageDialog(null, "Malformed URL exception occured while connecting to bank server.\nPlease check server URL and try again.", "Server Error", JOptionPane.ERROR_MESSAGE);
		}catch (Exception e){
                    JOptionPane.showMessageDialog(null, "An exception has occured while communicating with bank..\nStandby, printing stack trace...", "Server Error", JOptionPane.PLAIN_MESSAGE);
			e.printStackTrace();
		}
      
      if(serverBank != null)
      {
          //loadBank(serverBank);
          JOptionPane.showMessageDialog(null, "Successfully connected to Seneca@York bank", "Connection", JOptionPane.PLAIN_MESSAGE);
          jButLoadData.setVisible(false);
          jLabLoadData.setVisible(false);
          jLabBankName.setText("Welcome to Seneca@York Bank");
          jLabBankName.setVisible(true);
          jButOpenAccount.setEnabled(true);
          
          jRadioSAV.setEnabled(true);
          jRadioCHQ.setEnabled(true);
          jRadioGIC.setEnabled(true);
          
          jTabbedPaneMenu.setEnabled(true);
          jPanelOpenAccount.setEnabled(true);
          jTextAccountNum.setEnabled(true);
          jTextBalance.setEnabled(true);
          jTextName.setEnabled(true);
          jTextRateSCharge.setEnabled(true);

      }
     
    }//GEN-LAST:event_jButLoadDataActionPerformed

    private void jRadioSAVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioSAVActionPerformed
        jLabRS.setText("Interest Rate:");
        jLabMaxOrPeriod.setVisible(false);
        jTextMaxOrPeriod.setVisible(false);
    }//GEN-LAST:event_jRadioSAVActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        jLabBankName.setVisible(false);
        buttonGroupAccountType.add(jRadioCHQ);
        buttonGroupAccountType.add(jRadioSAV);
        buttonGroupAccountType.add(jRadioGIC);
        
        buttonGroupDisplay.add(jRadioName);
        buttonGroupDisplay.add(jRadioBalance);
        
        jLabMaxOrPeriod.setVisible(false);
        jTextMaxOrPeriod.setVisible(false);
        
        jTabbedPaneMenu.setEnabled(false);
        jTextAccountNum.setEnabled(false);
        jTextBalance.setEnabled(false);
        jTextName.setEnabled(false);
        jTextRateSCharge.setEnabled(false);


    }//GEN-LAST:event_formWindowOpened

    private void jRadioGICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioGICActionPerformed
        jLabMaxOrPeriod.setText("Years of Investment:");
        jLabRS.setText("Interest Rate:");
        jLabMaxOrPeriod.setVisible(true);
        jTextMaxOrPeriod.setVisible(true);
    }//GEN-LAST:event_jRadioGICActionPerformed

    private void jRadioCHQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioCHQActionPerformed
        jLabMaxOrPeriod.setText("Number of Transactions Allowed:");
        jLabRS.setText("Service Charge:");
        jLabMaxOrPeriod.setVisible(true);
        jTextMaxOrPeriod.setVisible(true);
    }//GEN-LAST:event_jRadioCHQActionPerformed

    private void jTextNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextNameFocusGained
        jTextName.selectAll();
    }//GEN-LAST:event_jTextNameFocusGained

    private void jButOpenAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButOpenAccountActionPerformed
        //TODO - Open an account Action

        if(jRadioSAV.isSelected()){
        	//FIXME - Open account
            //Validate Input
        	try{
        		double balance = Double.parseDouble(jTextBalance.getText());
        		String accountNumber = jTextAccountNum.getText();
        		double interestRate = Double.parseDouble(jTextRateSCharge.getText());
        		
        		Savings newAccount = new Savings(jTextName.getText(), accountNumber, balance, interestRate);
        		
        		serverBank.addAccount(newAccount);
        		
        		JOptionPane.showMessageDialog(null, "Account opened successfully...\n\n" + newAccount, "Account Info", JOptionPane.PLAIN_MESSAGE);
        	}catch (NumberFormatException e){
        		JOptionPane.showMessageDialog(null, "Account balance and interest rate must be in double format and cannot be empty.", "Open Account Error", JOptionPane.ERROR_MESSAGE); 
            }catch (RemoteException e){
            	JOptionPane.showMessageDialog(null, "Connection to server lost. Please restart the client and check if the server is online.", "Connection Failure", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(GUIRemoteBankClient.class.getName()).log(Level.SEVERE, null, e);
            }
            
        }
        else if(jRadioCHQ.isSelected()){ 
            
        	try {
	    		String accountNumber = jTextAccountNum.getText();
	    		double balance = Double.parseDouble(jTextBalance.getText());
	    		double serviceCharge = Double.parseDouble(jTextRateSCharge.getText());
	    		int maxTransactions = Integer.parseInt(jTextMaxOrPeriod.getText());
	        	Chequing newAccount = new Chequing(jTextName.getText(), accountNumber, balance, serviceCharge, maxTransactions);
	    		
	        	serverBank.addAccount(newAccount);
	            
	    		JOptionPane.showMessageDialog(null, "Account open successfully...\n\n" + newAccount, "Account Info", JOptionPane.PLAIN_MESSAGE);
            }catch (NumberFormatException e){
            	JOptionPane.showMessageDialog(null, "Balance, service charge, account number must be in double format."
            			+ "\nNumber of transactions allowed must be in integer format."
            			+ "\nAll fields must not be blank.", "CHQ account data error", JOptionPane.ERROR_MESSAGE);
            }catch(RemoteException e){
            	JOptionPane.showMessageDialog(null, "Connection to server lost. Please restart the client and check if the server is online.", "Connection Failure", JOptionPane.ERROR_MESSAGE);
            	Logger.getLogger(GUIRemoteBankClient.class.getName()).log(Level.SEVERE, null, e);
            }
                
        }
        else if(jRadioGIC.isSelected()){
	        try{
	        	String accountNumber = jTextAccountNum.getText();
	        	double balance = Double.parseDouble(jTextBalance.getText());
	        	int periodOfInvestment = Integer.parseInt(jTextMaxOrPeriod.getText());
	        	double interestRate = Double.parseDouble(jTextRateSCharge.getText());
	        	
	        	GIC newAccount = new GIC(jTextName.getText(), accountNumber, balance, periodOfInvestment, interestRate);
	        	
	            serverBank.addAccount(newAccount);
	            
	            JOptionPane.showMessageDialog(null, "Account successfully added!\n\n" + newAccount, "Account Info", JOptionPane.PLAIN_MESSAGE);
	        }catch (NumberFormatException e) {
	        	JOptionPane.showMessageDialog(null, "Balance and interest rate must be in double format.\n"
	        			+ "Period of investment must be in integer format.\n"
	        			+ "All numeric fields must not be empty.", "GIC account data error", JOptionPane.ERROR_MESSAGE);
	        }catch (RemoteException e){
	        	JOptionPane.showMessageDialog(null, "Connection to server lost. Please restart the client and check if the server is online.", "Connection Failure", JOptionPane.ERROR_MESSAGE);
	            Logger.getLogger(GUIRemoteBankClient.class.getName()).log(Level.SEVERE, null, e);
	        }
	        
        }
	        jTextName.setText("Ex. Last name, First name");
	        jTextAccountNum.setText("");
	        jTextBalance.setText("");
	        jTextRateSCharge.setText("");
	        jTextMaxOrPeriod.setText("");
    }//GEN-LAST:event_jButOpenAccountActionPerformed

    private void jButDeleteAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButDeleteAccountActionPerformed
        
        try{
            String accountNumber = jTextDeleteAccount.getText().trim();
            if (accountNumber.isEmpty()){
            	 JOptionPane.showMessageDialog(null, "Please enter account number.", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
            	account = serverBank.deleteAccount(accountNumber);	
				if (account == null){
				    JOptionPane.showMessageDialog(null, "Delete was not successful!\nPlease ensure account number is correct.", "Delete Account Error", JOptionPane.ERROR_MESSAGE);
				}
				else{
				     StringBuffer results = new StringBuffer("");
				     results.append("Deleted Account information\n");
				     results.append("------------------------\n\n");
				     results.append(account);
				     results.append("\nAccount deleted successfully!\n");
				     JOptionPane.showMessageDialog(null, results, "Delete Account", JOptionPane.PLAIN_MESSAGE);
				}
				account = null;
           }
        }catch (RemoteException e){
            Logger.getLogger(GUIRemoteBankClient.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null, "Connection to server lost. Please restart the client and check if the server is online.", "Connection Failure", JOptionPane.ERROR_MESSAGE);

        } catch (NoAccountException e) {
            Logger.getLogger(GUIRemoteBankClient.class.getName()).log(Level.SEVERE, null, e);
        }
        
       
        jTextDeleteAccount.setText("");
    }//GEN-LAST:event_jButDeleteAccountActionPerformed

    private void jButDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButDisplayActionPerformed
        StringBuffer display = new StringBuffer("");
        if(!"".equals(jTextNameOrBalance.getText()))
        {
            //Search by name
            if(jRadioName.isSelected())
            {
                Account[] searchResults = null;
                try{
                    searchResults = serverBank.searchByAccountName(jTextNameOrBalance.getText());

                    //Display the entries
                    for (Account account: searchResults){
                            displayAccount(account);
                            display.append("Account Details\n");
                            display.append("====================\n");
                            display.append(String.format("%s\n\n", account.toString()));
                    }
                    
                    JOptionPane.showMessageDialog(null, display, "Display Account by Name", JOptionPane.PLAIN_MESSAGE);

                }catch (NoAccountException e){
                    JOptionPane.showMessageDialog(null, e, "Display Account by Name", JOptionPane.ERROR_MESSAGE);
                }catch (RemoteException e){
                    Logger.getLogger(GUIRemoteBankClient.class.getName()).log(Level.SEVERE, null, e);
                    JOptionPane.showMessageDialog(null, "Connection to server lost. Please restart the client and check if the server is online.", "Connection Failure", JOptionPane.ERROR_MESSAGE);
                }
            }else
            {
                ArrayList<Account> searchResults = new ArrayList<Account>();
                //Search by balance
                     try{
                             searchResults = serverBank.searchAccountByBalance(Double.parseDouble(jTextNameOrBalance.getText()));
                             //Display
                             for (int i = 0; i < searchResults.size(); i++){
                                     displayAccount(searchResults.get(i));
                                     display.append("Account Details\n");
                                     display.append("--------------\n");
                                     display.append(String.format("%s\n\n", searchResults.get(i).toString()));
                             }
                             
                             JOptionPane.showMessageDialog(null, display, "Display Account by Balance", JOptionPane.PLAIN_MESSAGE);
                     }catch (NoAccountException e){
                         JOptionPane.showMessageDialog(null, e, "Display Account by Balance", JOptionPane.ERROR_MESSAGE);
                     }catch (RemoteException e){
                    	 JOptionPane.showMessageDialog(null, "Connection to server lost. Please restart the client and check if the server is online.", "Connection Failure", JOptionPane.ERROR_MESSAGE);
                    	 Logger.getLogger(GUIRemoteBankClient.class.getName()).log(Level.SEVERE, null, e);
                     }
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please enter name or balance to display!", "Display Account Error", JOptionPane.ERROR_MESSAGE);
        }
        jTextNameOrBalance.setText("");
    }//GEN-LAST:event_jButDisplayActionPerformed

    private void jButTaxStatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButTaxStatActionPerformed
        String accountName = jTextAccountHolder.getText();
		Account[] searchResults = new Account[0];
		int resultCounter = 1;
		if (accountName.isEmpty()){
			JOptionPane.showMessageDialog(null,  "Please enter an account holder name", "Error", JOptionPane.ERROR_MESSAGE);
		}
		else {
			//Get all accounts by name
			try{
				searchResults = serverBank.searchByAccountName(accountName);
				int numOfStatements = 0;
	
				for (int i = 0; i < searchResults.length; i++){
					if (searchResults[i] instanceof GIC || searchResults[i] instanceof Savings){
						numOfStatements++;
					}
				}
	                        
	                StringBuffer display = new StringBuffer("");
	                if (numOfStatements > 0){
	                	display.append(String.format("Tax Statement(s) for %s\n", searchResults[0].getFullName()));
	                }else{
	                	display.append(String.format("%s does not have any taxable accounts.", accountName));
	                }
	                
	                //Check if account instaneof GIC/Savings
	                for (int i = 0; i < searchResults.length; i++){
	                        if (searchResults[i] instanceof GIC){
	                                display.append(String.format("\n%d. \n", resultCounter));
	                                GIC gic = (GIC) searchResults[i];
	                                display.append (gic.createTaxStatement());
	                                resultCounter++;
	                        }
	                        else if(searchResults[i] instanceof Savings){
	                        		display.append(String.format("\n %d. \n", resultCounter));
	                                Savings savings = (Savings) searchResults[i];
	                                display.append (savings.createTaxStatement());
	                                resultCounter++;
	                        }
	                }
	                
	                JOptionPane.showMessageDialog(null, display, "Tax Statement", JOptionPane.PLAIN_MESSAGE);
	 
			}catch (NoAccountException e ){
	                    JOptionPane.showMessageDialog(null, e, "Tax Statement", JOptionPane.ERROR_MESSAGE);
			}catch (RemoteException e){
				JOptionPane.showMessageDialog(null, "Connection to server lost. Please restart the client and check if the server is online.", "Connection Failure", JOptionPane.ERROR_MESSAGE);
			}
		}
    }//GEN-LAST:event_jButTaxStatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIRemoteBankClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
            //</editor-fold>
            //</editor-fold>
            
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIRemoteBankClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupAccountType;
    private javax.swing.ButtonGroup buttonGroupDisplay;
    private javax.swing.JButton jButDeleteAccount;
    private javax.swing.JButton jButDisplay;
    private javax.swing.JButton jButLoadData;
    private javax.swing.JButton jButOpenAccount;
    private javax.swing.JButton jButTaxStat;
    private javax.swing.JLabel jLabBankName;
    private javax.swing.JLabel jLabDeleteAccount;
    private javax.swing.JLabel jLabLoadData;
    private javax.swing.JLabel jLabMaxOrPeriod;
    private javax.swing.JLabel jLabRS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanelDelete;
    private javax.swing.JPanel jPanelDeposit;
    private javax.swing.JPanel jPanelDisplay;
    private javax.swing.JPanel jPanelOpenAccount;
    private javax.swing.JPanel jPanelTaxStatement;
    private javax.swing.JPanel jPanelWithdraw;
    private javax.swing.JRadioButton jRadioBalance;
    private javax.swing.JRadioButton jRadioCHQ;
    private javax.swing.JRadioButton jRadioGIC;
    private javax.swing.JRadioButton jRadioName;
    private javax.swing.JRadioButton jRadioSAV;
    private javax.swing.JTabbedPane jTabbedPaneMenu;
    private javax.swing.JTextField jTextAccountHolder;
    private javax.swing.JTextField jTextAccountNum;
    private javax.swing.JTextField jTextBalance;
    private javax.swing.JTextField jTextDeleteAccount;
    private javax.swing.JTextField jTextMaxOrPeriod;
    private javax.swing.JTextField jTextName;
    private javax.swing.JTextField jTextNameOrBalance;
    private javax.swing.JTextField jTextRateSCharge;
    // End of variables declaration//GEN-END:variables
}
